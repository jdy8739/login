// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  password String
  email String
  bio String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tweets Tweet[]
  likes Like[]
  responses Response[]
}

model Tweet {
  id Int @id @default(autoincrement())
  tweet String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  likes Like[]
  responses Response[]
}

model Response {
  id Int @id @default(autoincrement())
  content String
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  tweet Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int
}

model Like {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  tweet Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int
}
